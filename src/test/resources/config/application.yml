# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  client:
    enabled: false
  instance:
    appname: MessageCentral
    instanceId: MessageCentral:${spring.application.instance-id:${random.value}}

spring:
  application:
    name: MessageCentral
  cloud:
    config:
      enabled: false
  # Replace by 'prod, faker' to add the faker context and have sample data loaded in production
  liquibase:
    contexts: test
  jackson:
    serialization:
      write-durations-as-timestamps: false
  mail:
    host: localhost
    port: 2525
    protocol: smtp
    username:
    password:
  main:
    allow-bean-definition-overriding: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  messages:
    basename: i18n/messages
  task:
    execution:
      thread-name-prefix: message-central-task-
      pool:
        core-size: 1
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: message-central-scheduling-
      pool:
        size: 20
  thymeleaf:
    mode: HTML

server:
  port: 10344
  address: localhost

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================
jhipster:
  clientApp:
    name: 'messageCentralApp'
  mail:
    from: MessageCentral@localhost.com
    base-url: http://127.0.0.1:8080
  logging:
    # To test json console appender
    use-json-format: false
    logstash:
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
        base64-secret: MjM4NmU0MDA4ZWVmNDU5YWQ2ZDMzZDVjYWRjNDAxMWM3NGNhOTcxZWUwZTZjYmIwMDI2MzNhYTgwODRiMDNlZGQ2YjJmZjRjNjRjMTg3NjZhOWQwZjM2Zjg2NTA3MDY4Zjc1YThiMDBlMTZlODkyYjRlZDk5ZmI2YmJmZTY5OGU=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

application:
  credential:
    # For dev env, you can get Test credential from your account
    # Check https://www.twilio.com/docs/iam/test-credentials for more information
    twilio:
      accountSid: TWILIO_ACCOUNT_SID
      token: TWILIO_AUTH_TOKEN
    kavenegar:
      token: KAVENEGAR_AUTH_TOKEN
  email:
    provider: mail-server
    from: noreply@localhost
  sms:
    provider: twilio
    from: +XXXXXXXXXXX
  notification:
    provider: onesignal
    firebase:
      file-path: firebase-service-account.json
    onesignal:
      url: https://onesignal.com/api/v1/notifications
      app-id: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
    pushe:
      url: https://api.pushe.co/v2/messaging/notifications/
      token: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      app-id: XXXXXXXXXXXXXXXX

management:
  health:
    mail:
      enabled: false
